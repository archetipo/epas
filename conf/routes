# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
*		/										module:secure

#Import Shibboleth routes
#*      /                						module:shibboleth

# Home page
GET     /                                       Application.index

#Home page amministrazione
GET		/presenze								Application.indexAdmin

GET		/orarioAdmin/{personId}/{year}/{month}	Stampings.personStamping
GET 	/orarioAdmin							Stampings.personStamping

GET		/competences/prova						Competences.prova

GET		/utilities								Administration.utilities
POST	/utilities/{personId}/{year}/{month}	Administration.fixPersonSituation
POST	/utilities/{year}						Administration.createOvertimeFile

#Assenze
#GET		/absences/{year}/{month}		Absences.absences

#Assenze annuali
GET		/yearlyAbsences/{personId}/{year}		YearlyAbsences.yearlyAbsences

#Assenze mensili globali
GET		/generalMonthlyAbsences/{year}/{month}	YearlyAbsences.showGeneralMonthlyAbsences
GET		/yearlyAbsences/absencesPerPerson/{personId}/{year}		YearlyAbsences.absencesPerPerson

#Ferie
GET		/vacations								Vacations.show
POST	/vacations								Vacations.vacations		
GET		/vacationsCurrentYear					Vacations.vacationsCurrentYear		

#Competenze
GET		/competences/{personId}/{year}/{month}	Competences.show

#Riepilogo ore
GET		/hourRecap/{personId}/{year}			PersonMonths.hourRecap

#Dispatcher
POST	/dispatch								SwitchTemplate.dispatch	

GET		/person/{<[0-9]+>id}/dailyStampings/{<(19|20)\d\d>year}/{<(0[1-9]|1[012])>month}/{<(0[1-9]|[12][0-9]|3[01])>day}				Stampings.dailyStampings

# Ignore favicon requests
GET     /favicon.ico                            404

# Map static resources from the /app/public folder to the /public path
GET     /public/                                staticDir:public

# Import Secure routes
#*       /                						module:secure

# Gestioni sede e sedi distaccate
GET		/offices/showOffices					Offices.showOffices
GET		/offices/insertRemoteOffice				Offices.insertRemoteOffice
POST	/insertRemoteOffice						Offices.save


# Gestione persone
GET		/personList								Persons.list
POST	/persons								Persons.save
GET		/persons								Persons.insertPerson
GET		/insertUsername							Persons.insertUsername
POST	/insertUsername							Persons.updateUsername
GET		/persons/edit/{personId}				Persons.edit
GET		/persons/personCompetence/{personId}/{year}/{month}			Person.personCompetence
POST	/person/saveCompetence/					Persons.saveCompetence
POST	/persons/deletePerson/{personId}		Persons.deletePerson
GET		/persons/terminatePerson/{personId}		Persons.terminatePerson
POST	/persons/terminateContract/{personId}	Persons.terminateContract
GET		/competences/updateOldOvertime/{personId}	Competences.updateOldOvertime
PUT		/competences/saveOldOvertime			Competences.saveOldOvertime
GET		/persons/modifyContract/{contractId}	Persons.modifyContract
POST	/persons/modifyContract/{contractId}	Persons.updateContract
GET		/persons/insertContract/{personId}		Persons.insertContract
POST 	/persons/saveContract					Persons.saveContract


# Gestione orari di lavoro
GET		/manageWorkingTime						WorkingTimes.manageWorkingTime
GET		/insertWorkingTime.html					WorkingTimes.insertWorkingTime
POST	/insertWorkingTime						WorkingTimes.save
POST	/updateWorkingTime						WorkingTimes.updateWorkingTime
GET 	/workingtimes/edit/{workingTimeId}		WorkingTimes.edit

#Gestione tipi ferie
GET		/manageVacationCode						VacationsAdmin.manageVacationCode
GET		/insertVacationCode						VacationsAdmin.insertVacationCode
POST	/insertVacationCode						VacationsAdmin.save
GET		/manageVacationCode						VacationsAdmin.discard
GET		/vacationsAdmin/edit/{vacationCodeId}	VacationsAdmin.edit


# Gestione password
GET		/persons/{personId}/changePassword		Persons.changePassword
POST	/persons/changePassword					Persons.savePassword

# Gestione timbrature
GET		/stampings/new									Stampings.create
POST	/stampings/insert/								Stampings.insert
GET		/stampings/edit/{stampingId}					Stampings.edit
POST	/stampings/update/								Stampings.update
GET		/personStamping									Stampings.personStamping
GET		/stampings/missingStamping/{year}/{month}		Stampings.missingStamping
GET		/stampings/dailyPresence/{year}/{month}/{day}	Stampings.dailyPresence
GET		/stampings/mealTicketSituation/{year}/{month}	Stampings.mealTicketSituation

#Riepilogo mensile
GET		/monthrecaps/show/{year}/{month}		MonthRecaps.show
GET		/monthRecaps/justifiedAbsences			MonthRecaps.justifiedAbsences
GET		/monthRecaps/notJustifiedAbsences		MonthRecaps.notJustifiedAbsences
GET		/monthRecaps/workingDayHoliday			MonthRecaps.workingDayHoliday
GET		/monthRecaps/workingDayNotHoliday		MonthRecaps.workingDayNotHoliday

#Orario e timbrature
GET     /stampings/{personId}/{year}/{month}	Stampings.stampings

#Gestione assenze
POST	/absences/insert						Absences.insert
GET		/absences/create						Absences.create

GET		/absences/edit/{absenceId}				Absences.edit
POST	/absences/update						Absences.update
GET		/absences/manageAbsenceCode				Absences.manageAbsenceCode
GET		/absences/absenceCodeList				Absences.absenceCodeList
GET		/absences/insertAbsenceCode				Absences.insertAbsenceCode
POST	/absences/insertAbsenceCode				Absences.saveAbsenceCode

POST	/absences/updateCode					Absences.updateCode
GET		/absences/editCode/{absenceCodeId}		Absences.editCode

#Gestione configurazione parametri
GET		/listConfigurations						Configurations.list
GET		/insertConfiguration					Configurations.insertConfig
POST	/insertConfiguration					Configurations.save
GET		/configurations/edit/{configId}			Configurations.edit
POST	/configurations/edit/{configId}			Configurations.save

#Gestione utenti amministratori
GET		/administratorList						Administrators.list
GET		/insertAdministrator					Administrators.insertAdmin
POST	/insertAdministrator					Administrators.save
GET 	/administrators/edit/{adminId}			Administrators.edit
POST	/administrators/update					Administrators.update

#Gestione straordinari e competenze
GET		/showCompetences/{year}/{month}			Competences.showCompetences
GET		/manageCompetenceCode					Competences.manageCompetenceCode
GET		/competences/edit/{competenceCodeId}	Competences.edit
GET		/insertCompetenceCode					Competences.insertCompetenceCode
POST	/insertCompetenceCode					Competences.save
GET		/manageCompetenceCode					Competences.discard
GET		/totalOvertimeHours/{year}/{month}		Competences.totalOvertimeHours
POST	/totalOvertimeHours/					Competences.saveOvertime
GET		/overtime/{year}/{month}				Competences.overtime
GET		/recapCompetences						Competences.recapCompetences
GET		/recapCompetences/updatePersonCompetence/{personId}		Competences.updatePersonCompetence
GET		/exportCompetences						Competences.exportCompetences
POST	/exportCompetences/{year}				Competences.getOvertimeInYear

#Gestione attestati di presenza
GET		/uploadSituation/						UploadSituation.show
POST	/uploadSituation/						UploadSituation.uploadSituation

#Gestione stampa cartellino amministratore
GET		/printTags/listPersonForPrintTags/{year}/{month}		PrintTags.listPersonForPrintTags
POST	/printTags/showTag/{personId}			PrintTags.showTag

#Gestione stampa cartellino dipendente
GET     /printTags/{personId}/{year}/{month}	PrintTags.showPersonTag

#Clock
GET		/clocks									Clocks.show
POST	/clocks/clocklogin						Clocks.clockLogin



#Gestione reperibilit√† (sist-org)
GET 	/reperibility/{type}/personList															Reperibility.personList

GET		/reperibility/{type}/find/{<(19|20)\d\d>yearFrom}/{<(0[1-9]|1[012])>monthFrom}/{<(0[1-9]|[12][0-9]|3[01])>dayFrom}/{<(19|20)\d\d>yearTo}/{<(0[1-9]|1[012])>monthTo}/{<(0[1-9]|[12][0-9]|3[01])>dayTo}	Reperibility.find

PUT		/reperibility/{type}/update/{year}/{month}												Reperibility.update

GET 	/reperibility/{type}/exportYearAsPDF/{<(19|20)\d\d>year}								Reperibility.exportYearAsPDF
GET 	/reperibility/{type}/exportMonthAsPDF/{<(19|20)\d\d>year}/{<(0[1-9]|1[012])>month}		Reperibility.exportMonthAsPDF
GET		/reperibility/{type}/iCal/{personId}/{<(19|20)\d\d>year}								Reperibility.iCal
GET 	/reperibility/{type}/who/{<(19|20)\d\d>yearFrom}/{<(0[1-9]|1[012])>monthFrom}/{<(0[1-9]|[12][0-9]|3[01])>dayFrom}/{<(19|20)\d\d>yearTo}/{<(0[1-9]|1[012])>monthTo}/{<(0[1-9]|[12][0-9]|3[01])>dayTo}	Reperibility.who

GET 	/reperibility/{type}/absence/{<(19|20)\d\d>yearFrom}/{<(0[1-9]|1[012])>monthFrom}/{<(0[1-9]|[12][0-9]|3[01])>dayFrom}/{<(19|20)\d\d>yearTo}/{<(0[1-9]|1[012])>monthTo}/{<(0[1-9]|[12][0-9]|3[01])>dayTo}	Reperibility.absence
GET		/reperibility/{type}/whoIsAbsent/{<(19|20)\d\d>yearFrom}/{<(0[1-9]|1[012])>monthFrom}/{<(0[1-9]|[12][0-9]|3[01])>dayFrom}/{<(19|20)\d\d>yearTo}/{<(0[1-9]|1[012])>monthTo}/{<(0[1-9]|[12][0-9]|3[01])>dayTo}	Reperibility.whoIsAbsent

#Gestione turni (sist-org)
GET		/shift/{type}/personList																		Shift.personList
GET		/shift/{type}/find/{<(19|20)\d\d>yearFrom}/{<(0[1-9]|1[012])>monthFrom}/{<(0[1-9]|[12][0-9]|3[01])>dayFrom}/{<(19|20)\d\d>yearTo}/{<(0[1-9]|1[012])>monthTo}/{<(0[1-9]|[12][0-9]|3[01])>dayTo}	Shift.find
GET 	/shift/{type}/exportMonthAsPDF/{<(19|20)\d\d>year}/{<(0[1-9]|1[012])>month}						Shift.exportMonthAsPDF
GET 	/shift/{type}/exportMonthCalAsPDF/{<(19|20)\d\d>year}/{<(0[1-9]|1[012])>month}					Shift.exportMonthCalAsPDF
PUT		/shift/{type}/update/{year}/{month}																Shift.update

GET		/shift/{type}/absence/{<(19|20)\d\d>yearFrom}/{<(0[1-9]|1[012])>monthFrom}/{<(0[1-9]|[12][0-9]|3[01])>dayFrom}/{<(19|20)\d\d>yearTo}/{<(0[1-9]|1[012])>monthTo}/{<(0[1-9]|[12][0-9]|3[01])>dayTo}	Shift.absence

#Gestione straordinari (sist-org)
GET		/overtimes/getPersonOvertimes/{email}/{year}/{month}						Overtimes.getPersonOvertimes
PUT		/overtimes/setRequestedOvertime/{year}/{month}								Overtimes.setRequestOvertime
POST 	/overtimes/exportMonthAsPDF/{<(19|20)\d\d>year}/{<(0[1-9]|1[012])>month}	Overtimes.exportMonthAsPDF

GET 	/overtimes/getSupervisorTotalOvertimes/{email}								Overtimes.getSupervisorTotalOvertimes
PUT 	/overtimes/setSupervisorTotalOvertimes/{email}/{hours}						Overtimes.setSupervisorTotalOvertimes

#Gestione timbrature via json
PUT		/stampings/create						StampingsFromClient.create

#Invio periodi di assenza 
POST	/absenceFromJson/absenceInPeriod				AbsenceFromJson.absenceInPeriod
POST	/absences/setPersonEmailForAbsence		Absences.setPersonEmailForAbsence

# Catch all
*       /{controller}/{action}                  {controller}.{action}



