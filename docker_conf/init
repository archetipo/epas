#!/bin/bash
set -e

if [ -z "${VIRTUAL_HOST}" ]; then
    echo "ERROR: "
    echo "Per favore specifica il nome del host che conterr√† ePAS, es. epas.tools.iit.cnr.it attraverso il parametro VIRTUAL_HOST."
    exit 1
fi

PROTOCOL=${PROTOCOL:-http}
EPAS_SHIB_LOGIN=${EPAS_SHIB_LOGIN:-false}

# use default port number if it is still not set
case "${PROTOCOL}" in
  "http"|"https")  echo "ePas Protocol set to ${PROTOCOL}" ;;
  *)
    echo "ERROR: "
    echo "  Please specify the database http/https protocol via the PROTOCOL configuration option."
    echo "  Accepted values are \"http\" or \"https\". Aborting..."
    exit 1
    ;;
esac

EPAS_APPLICATION_BASEURL="${PROTOCOL}:\/\/${VIRTUAL_HOST}"

DB_HOST=${DB_HOST:-postgres}
DB_PORT=${DB_PORT:-5432}
DB_NAME=${DB_NAME:-epas}
DB_USER=${DB_USER:-postgres}

EVOLUTIONS_ENABLED=${EVOLUTIONS_ENABLED:-true}

if [ -z "${DB_PASS}" ]; then
	DB_USER_PASS=$DB_USER
else
	DB_USER_PASS="$DB_USER:$DB_PASS"
fi

######## LOGS Settings #########

LOG_LEVEL=${LOG_LEVEL:-INFO}
APPENDERS=${APPENDERS:-"stdout, stderr"}
GRAYLOG_HOST=${GRAYLOG_HOST}
GRAYLOG_PORT=${GRAYLOG_PORT:-3514}
GRAYLOG_ORIGIN_HOST=${GRAYLOG_ORIGIN_HOST:-$VIRTUAL_HOST}

cp ${APP_HOME}/docker_conf/log4j.prod.properties ${APP_HOME}/conf/
sed 's#{{LOG_LEVEL}}#'"${LOG_LEVEL}"'#' -i ${APP_HOME}/conf/log4j.prod.properties
sed 's#{{APPENDERS}}#'"${APPENDERS}"'#' -i ${APP_HOME}/conf/log4j.prod.properties
sed 's#{{GRAYLOG_HOST}}#'"${GRAYLOG_HOST}"'#' -i ${APP_HOME}/conf/log4j.prod.properties
sed 's#{{GRAYLOG_PORT}}#'"${GRAYLOG_PORT}"'#' -i ${APP_HOME}/conf/log4j.prod.properties
sed 's#{{GRAYLOG_ORIGIN_HOST}}#'"${GRAYLOG_ORIGIN_HOST}"'#' -i ${APP_HOME}/conf/log4j.prod.properties

# Backup db
cp ${APP_HOME}/docker_conf/backupdb.sh ${APP_HOME}/tools/backupdb.sh

sed 's#{{DB_HOST}}#'"${DB_HOST}"'#' -i ${APP_HOME}/tools/backupdb.sh
sed 's#{{DB_PORT}}#'"${DB_PORT}"'#' -i ${APP_HOME}/tools/backupdb.sh
sed 's#{{DB_NAME}}#'"${DB_NAME}"'#' -i ${APP_HOME}/tools/backupdb.sh
sed 's#{{DB_USER_PASS}}#'"${DB_USER_PASS}"'#' -i ${APP_HOME}/tools/backupdb.sh
sed 's#{{EPAS_HOST}}#'"${VIRTUAL_HOST}"'#g' -i ${APP_HOME}/tools/backupdb.sh

chmod +x ${APP_HOME}/tools/backupdb.sh

if [ -z "${BACKUP_CRON}" ]; then
  echo "Backup del database non attivo."
else
  cp ${APP_HOME}/docker_conf/cron ${APP_HOME}/tools/cron
  sed 's#{{BACKUP_CRON}}#'"${BACKUP_CRON}"'#' -i ${APP_HOME}/tools/cron
  crontab ${APP_HOME}/tools/cron
  cron
  echo "Backup del database attivato: ${BACKUP_CRON}."
fi

# configure ePAS
SKIP_IP_CHECK=${SKIP_IP_CHECK:-false}

cp ${APP_HOME}/docker_conf/prod.conf ${APP_HOME}/conf/

sed 's#{{EPAS_APPLICATION_BASEURL}}#'"${EPAS_APPLICATION_BASEURL}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{DB_HOST}}#'"${DB_HOST}"'#' -i ${APP_HOME}/conf/prod.conf

sed 's#{{DB_PORT}}#'"${DB_PORT}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{DB_NAME}}#'"${DB_NAME}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{DB_USER_PASS}}#'"${DB_USER_PASS}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{PROTOCOL}}#'"${PROTOCOL}"'#' -i ${APP_HOME}/conf/prod.conf

sed 's#{{EVOLUTIONS_ENABLED}}#'"${EVOLUTIONS_ENABLED}"'#' -i ${APP_HOME}/conf/prod.conf

### Impostazione server smtp

SMTP_FROM=${SMTP_FROM:-epas@cnr.it}
SMTP_HOST=${SMTP_HOST:-smtp.cnr.it}

sed 's#{{SMTP_FROM}}#'"${SMTP_FROM}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{SMTP_HOST}}#'"${SMTP_HOST}"'#' -i ${APP_HOME}/conf/prod.conf

if [ -z "${SMTP_USER}" ]; then
  sed -n '/SMTP_USER/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/SMTP_PASS/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{SMTP_USER}}#'"${SMTP_USER}"'#' -i ${APP_HOME}/conf/prod.conf
  sed 's#{{SMTP_PASS}}#'"${SMTP_PASS}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${SMTP_PORT}" ]; then
  sed -n '/SMTP_PORT/!p'  -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{SMTP_PORT}}#'"${SMTP_PORT}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${SMTP_CHANNEL}" ]; then
  sed -n '/SMTP_CHANNEL/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{SMTP_CHANNEL}}#'"${SMTP_CHANNEL}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${SMTP_PROTOCOL}" ]; then
  sed -n '/SMTP_PROTOCOL/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{SMTP_PROTOCOL}}#'"${SMTP_PROTOCOL}"'#' -i ${APP_HOME}/conf/prod.conf
fi

URL_ATTESTATI=${URL_ATTESTATI:-https://attestativ2.rm.cnr.it}

if [ -z "${URL_ATTESTATI}" ]; then
  sed -n '/URL_ATTESTATI/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{URL_ATTESTATI}}#'"${URL_ATTESTATI}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${URL_USER}" ]; then
  sed -n '/URL_USER/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{URL_USER}}#'"${URL_USER}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${URL_PASS}" ]; then
  sed -n '/URL_PASS/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{URL_PASS}}#'"${URL_PASS}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${JOBS_ACTIVE}" ]; then
  sed -n '/JOBS_ACTIVE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{JOBS_ACTIVE}}#'"${JOBS_ACTIVE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_ENABLED}" ]; then
  sed -n '/OIL_ENABLED/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_ENABLED}}#'"${OIL_ENABLED}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_APP_NAME}" ]; then
  sed -n '/OIL_APP_NAME/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_APP_NAME}}#'"${OIL_APP_NAME}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_EMAIL_TO}" ]; then
  sed -n '/OIL_EMAIL_TO/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_EMAIL_TO}}#'"${OIL_EMAIL_TO}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_CATEGORIES}" ]; then
  sed -n '/OIL_CATEGORIES/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_CATEGORIES}}#'"${OIL_CATEGORIES}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_CATEGORIES_DEFAULT}" ]; then
  sed -n '/OIL_CATEGORIES_DEFAULT/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_CATEGORIES_DEFAULT}}#'"${OIL_CATEGORIES_DEFAULT}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${PERSEO_BASE}" ]; then
  sed -n '/PERSEO_BASE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{PERSEO_BASE}}#'"${PERSEO_BASE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${PERSEO_USER}" ]; then
  sed -n '/PERSEO_USER/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/PERSEO_PASS/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{PERSEO_USER}}#'"${PERSEO_USER}"'#' -i ${APP_HOME}/conf/prod.conf
  sed 's#{{PERSEO_PASS}}#'"${PERSEO_PASS}"'#' -i ${APP_HOME}/conf/prod.conf
fi

sed 's#{{SKIP_IP_CHECK}}#'"${SKIP_IP_CHECK}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{EPAS_SHIB_LOGIN}}#'"${EPAS_SHIB_LOGIN}"'#' -i ${APP_HOME}/conf/prod.conf

appRun () {
  if [ "$EVOLUTIONS_ENABLED" = "true" ]; then
    echo "Applico eventuali evoluzioni al database..."
    sudo -u ${user} -H play evolutions:apply --%prod
    echo ".... evoluzioni terminate"
  else
    echo "Evoluzioni disabilitate dalla configurazione: EVOLUTIONS_ENABLED=$EVOLUTIONS_ENABLED"; 
  fi
  
  echo "Avvio ${APP}..."
  sudo -u ${user} -H play run --%prod -Dprecompiled=true -Duser.country=IT -Duser.language=it
  echo "....${APP} avviato"
}

appPlay() {
  if [ -z ${1} ]; then
    echo "Per favore specifica almeno un'azione play da eseguire, es: evolutions, evolutions:apply, etc...."
    return 1
  fi
  exec sudo -u ${user} -H play $@ --%prod
}

appHelp () {
  echo "Available options:"
  echo " app:run          - Start ePAS server (default)"
  echo " app:play <task>    - Execute a play task."
  echo " app:help           - Displays the help"
  echo " [command]          - Execute the specified linux command eg. bash."
}

case "$1" in
  app:run)
    appRun
    ;;
  app:play)
    shift 1
    appPlay $@
    ;;
  app:help)
    appHelp
    ;;
  *)
    if [ -x $1 ]; then
      $1
    else
      prog=$(which $1)
      if [ -n "${prog}" ] ; then
        shift 1
        $prog $@
      else
        appHelp
      fi
    fi
    ;;
esac

exit 0
