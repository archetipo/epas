#!/bin/bash
set -e

if [ -z "${EPAS_HOST}" ]; then
    echo "ERROR: "
    echo "Per favore specifica il nome del host che conterrÃ  ePAS, es. epas.tools.iit.cnr.it attraverso il parametro EPAS_HOST."
    exit 1
fi

chown -R epas:epas /home/epas

#EPAS_PORT=${EPAS_PORT:-9000}
#EPAS_SSH_HOST=${EPAS_SSH_HOST:-$EPAS_HOST}
#EPAS_SSH_PORT=${EPAS_SSH_PORT:-10022}

HTTPS=${HTTPS:-false}

EPAS_SHIB_LOGIN=${EPAS_SHIB_LOGIN:-false}

# use default port number if it is still not set
case "${HTTPS}" in
  false) EPAS_APPLICATION_BASEURL="http:\/\/${EPAS_HOST}" ;;
  true) EPAS_APPLICATION_BASEURL="https:\/\/${EPAS_HOST}" 

if [ -z "${SSL_CERTIFICATE}" ]; then
    echo "ERROR: "
    echo "Per favore specifica il nome del file del certificato ssl tramite il parametro SSL_CERTIFICATE."
    exit 1
fi

if [ -z "${SSL_KEY}" ]; then
    echo "ERROR: "
    echo "Per favore specifica il nome del file del certificato ssl tramite il parametro SSL_KEY."
    exit 1
fi
;;
  *)
    echo "ERROR: "
    echo "  Please specify the database http/https protocol via the HTTPS configuration option."
    echo "  Accepted values are \"true\" or \"false\". Aborting..."
    exit 1
    ;;
esac

DB_HOST=${DB_HOST:-$POSTGRES_PORT_5432_TCP_ADDR}
DB_PORT=${DB_PORT:-$POSTGRES_PORT_5432_TCP_PORT}
DB_NAME=${DB_NAME:-epas}
DB_USER=${DB_USER:-postgres}

if [ -z "${DB_PASS}" ]; then
	DB_USER_PASS=$DB_USER
else
	DB_USER_PASS="$DB_USER:$DB_PASS"
fi

SMTP_HOST=${SMTP_HOST:-smtp.cnr.it}
SMTP_PORT=${SMTP_PORT:-587}
SMTP_CHANNEL=${SMTP_CHANNEL:-starttls}

BACKUP_MINUTES=${BACKUP_MINUTES:-5}
BACKUP_HOURS=${BACKUP_HOURS:-6,12,18}

# LOGCHECK
LOGCHECK_ADDRESSES=${LOGCHECK_ADDRESSES:-cristian.lucchesi@iit.cnr.it,dario.tagliaferri@iit.cnr.it alessandro.martelli@iit.cnr.it, daniele.murgia@iit.cnr.it}

cp /home/epas/epas/docker_conf/logcheck/* /etc/logcheck/ignore.d.server/

echo 'epas: '${LOGCHECK_ADDRESSES} >> /etc/aliases
echo '/home/epas/epas/logs/epas.log' >> /etc/logcheck/logcheck.logfiles
sed  's/SENDMAILTO="logcheck"/SENDMAILTO="epas"/' -i /etc/logcheck/logcheck.conf

# Backup db
sudo -u epas -H cp /home/epas/epas/docker_conf/backupdb.sh /home/epas/epas/tools/backupdb.sh 

sudo -u epas -H sed 's/{{DB_HOST}}/'"${DB_HOST}"'/' -i /home/epas/epas/tools/backupdb.sh 
sudo -u epas -H sed 's/{{DB_PORT}}/'"${DB_PORT}"'/' -i /home/epas/epas/tools/backupdb.sh 
sudo -u epas -H sed 's/{{DB_NAME}}/'"${DB_NAME}"'/' -i /home/epas/epas/tools/backupdb.sh 
sudo -u epas -H sed 's/{{DB_USER_PASS}}/'"${DB_USER_PASS}"'/' -i /home/epas/epas/tools/backupdb.sh 
sudo -u epas -H sed 's/{{EPAS_HOST}}/'"${EPAS_HOST}"'/g' -i /home/epas/epas/tools/backupdb.sh 

sudo -u epas chmod +x /home/epas/epas/tools/backupdb.sh

sudo -u epas -H cp /home/epas/epas/docker_conf/cron /home/epas/epas/tools/cron

sudo -u epas -H sed 's/{{BACKUP_MINUTES}}/'"${BACKUP_MINUTES}"'/' -i /home/epas/epas/tools/cron
sudo -u epas -H sed 's/{{BACKUP_HOURS}}/'"${BACKUP_HOURS}"'/' -i /home/epas/epas/tools/cron

BACKUP=${BACKUP:-false}

if [ "${BACKUP}" == true ]; then
crontab -u epas /home/epas/epas/tools/cron
cron
fi

# configure ePAS
sudo -u epas -H cp /home/epas/epas/docker_conf/prod.conf /home/epas/epas/conf/prod.conf

sudo -u epas -H sed 's/{{EPAS_APPLICATION_BASEURL}}/'"${EPAS_APPLICATION_BASEURL}"'/' -i /home/epas/epas/conf/prod.conf
sudo -u epas -H sed 's/{{DB_HOST}}/'"${DB_HOST}"'/' -i /home/epas/epas/conf/prod.conf
sudo -u epas -H sed 's/{{DB_PORT}}/'"${DB_PORT}"'/' -i /home/epas/epas/conf/prod.conf
sudo -u epas -H sed 's/{{DB_NAME}}/'"${DB_NAME}"'/' -i /home/epas/epas/conf/prod.conf
sudo -u epas -H sed 's/{{DB_USER_PASS}}/'"${DB_USER_PASS}"'/' -i /home/epas/epas/conf/prod.conf

sudo -u epas -H sed 's/{{SMTP_HOST}}/'"${SMTP_HOST}"'/' -i /home/epas/epas/conf/prod.conf
sudo -u epas -H sed 's/{{SMTP_PORT}}/'"${SMTP_PORT}"'/' -i /home/epas/epas/conf/prod.conf
sudo -u epas -H sed 's/{{SMTP_USER}}/'"${SMTP_USER}"'/' -i /home/epas/epas/conf/prod.conf
sudo -u epas -H sed 's/{{SMTP_PASS}}/'"${SMTP_PASS}"'/' -i /home/epas/epas/conf/prod.conf
sudo -u epas -H sed 's/{{SMTP_CHANNEL}}/'"${SMTP_CHANNEL}"'/' -i /home/epas/epas/conf/prod.conf

sudo -u epas -H sed 's/{{EPAS_SHIB_LOGIN}}/'"${EPAS_SHIB_LOGIN}"'/' -i /home/epas/epas/conf/prod.conf

appRun () {
  echo "Applico eventuali evoluzioni al database..."
  sudo -u epas -H play evolutions:apply --%prod
  echo ".... evoluzioni terminate"
  
  echo "Avvio ePAS..."
  sudo -u epas -H play run --%prod
  echo "....ePAS avviato"
}

appPlay() {
  if [ -z ${1} ]; then
    echo "Per favore specifica almeno un'azione play da eseguire, es: evolutions, evolutions:apply, etc...."
    return 1
  fi
  exec sudo -u epas -H play $@ --%prod
}

appHelp () {
  echo "Available options:"
  echo " app:run          - Start ePAS server (default)"
  echo " app:play <task>    - Execute a play task."
  echo " app:help           - Displays the help"
  echo " [command]          - Execute the specified linux command eg. bash."
}

case "$1" in
  app:run)
    appRun
    ;;
  app:play)
    shift 1
    appPlay $@
    ;;
  app:help)
    appHelp
    ;;
  *)
    if [ -x $1 ]; then
      $1
    else
      prog=$(which $1)
      if [ -n "${prog}" ] ; then
        shift 1
        $prog $@
      else
        appHelp
      fi
    fi
    ;;
esac

exit 0